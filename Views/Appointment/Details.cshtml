@using HomecareAppointmentManagment.ViewModels
@model AppointmentDetailsViewModel

@{
    ViewData["Title"] = "Appointment Details";
}

<h2 class="mb-3">Appointment Details</h2>

@if (Model is null || Model.Appointment is null)
{
    <div class="alert alert-danger">Appointment not found.</div>
}
else
{
   

    <dl class="row">
        <dt class="col-sm-3">Id</dt>
        <dd class="col-sm-9">@Model.Appointment.Id</dd>

        <dt class="col-sm-3">Start</dt>
        <dd class="col-sm-9">
            @Model.Appointment.Start.ToString("yyyy-MM-dd HH:mm")
        </dd>

        <dt class="col-sm-3">End</dt>
        <dd class="col-sm-9">
            @Model.Appointment.End.ToString("yyyy-MM-dd HH:mm")
        </dd>

        <dt class="col-sm-3">Healthcare worker</dt>
        <dd class="col-sm-9">
            @if (Model.Appointment.HealthcareWorker is not null)
            {
                @Model.Appointment.HealthcareWorker.Name <span class="text-muted">(@Model.Appointment.HealthcareWorkerId)</span>
            }
            else
            {
                @Model.Appointment.HealthcareWorkerId
            }
        </dd>

        @* Optional: show status if your Appointment has such a property *@
        @* <dt class="col-sm-3">Status</dt>
        <dd class="col-sm-9">
            <span class="badge bg-secondary">@appt.Status</span>
        </dd> *@
    </dl>

    <div class="mt-4 d-flex gap-2 flex-wrap">
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>        
        <a asp-action="Edit" asp-route-id="@Model.Appointment.Id" class="btn btn-primary">Edit</a>        
        <a asp-action="Cancel" asp-route-id="@Model.Appointment.Id" class="btn btn-outline-danger">Cancel</a>

      
    </div>
}
